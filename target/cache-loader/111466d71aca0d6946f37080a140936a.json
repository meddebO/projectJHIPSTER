{"remainingRequest":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\core\\login\\login.service.ts","dependencies":[{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\core\\login\\login.service.ts","mtime":1568304013746},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2EsIF9iOw0KaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOw0KaW1wb3J0IHsgQWNjb3VudFNlcnZpY2UgfSBmcm9tICdhcHAvY29yZS9hdXRoL2FjY291bnQuc2VydmljZSc7DQppbXBvcnQgeyBBdXRoU2VydmVyUHJvdmlkZXIgfSBmcm9tICdhcHAvY29yZS9hdXRoL2F1dGgtc2Vzc2lvbi5zZXJ2aWNlJzsNCmxldCBMb2dpblNlcnZpY2UgPSBjbGFzcyBMb2dpblNlcnZpY2Ugew0KICAgIGNvbnN0cnVjdG9yKGFjY291bnRTZXJ2aWNlLCBhdXRoU2VydmVyUHJvdmlkZXIpIHsNCiAgICAgICAgdGhpcy5hY2NvdW50U2VydmljZSA9IGFjY291bnRTZXJ2aWNlOw0KICAgICAgICB0aGlzLmF1dGhTZXJ2ZXJQcm92aWRlciA9IGF1dGhTZXJ2ZXJQcm92aWRlcjsNCiAgICB9DQogICAgbG9naW4oY3JlZGVudGlhbHMsIGNhbGxiYWNrKSB7DQogICAgICAgIGNvbnN0IGNiID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkgeyB9Ow0KICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICAgICAgdGhpcy5hdXRoU2VydmVyUHJvdmlkZXIubG9naW4oY3JlZGVudGlhbHMpLnN1YnNjcmliZShkYXRhID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnRTZXJ2aWNlLmlkZW50aXR5KHRydWUpLnRoZW4oYWNjb3VudCA9PiB7DQogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGNiKCk7DQogICAgICAgICAgICB9LCBlcnIgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7DQogICAgICAgICAgICAgICAgcmVqZWN0KGVycik7DQogICAgICAgICAgICAgICAgcmV0dXJuIGNiKGVycik7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGxvZ291dCgpIHsNCiAgICAgICAgdGhpcy5hdXRoU2VydmVyUHJvdmlkZXIubG9nb3V0KCkuc3Vic2NyaWJlKG51bGwsIG51bGwsICgpID0+IHRoaXMuYWNjb3VudFNlcnZpY2UuYXV0aGVudGljYXRlKG51bGwpKTsNCiAgICB9DQp9Ow0KTG9naW5TZXJ2aWNlID0gdHNsaWJfMS5fX2RlY29yYXRlKFsNCiAgICBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLA0KICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBBY2NvdW50U2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgQWNjb3VudFNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgQXV0aFNlcnZlclByb3ZpZGVyICE9PSAidW5kZWZpbmVkIiAmJiBBdXRoU2VydmVyUHJvdmlkZXIpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3RdKQ0KXSwgTG9naW5TZXJ2aWNlKTsNCmV4cG9ydCB7IExvZ2luU2VydmljZSB9Ow0K"},{"version":3,"file":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\core\\login\\login.service.ts","sourceRoot":"","sources":["C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAC/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AAGxE,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YAAoB,cAA8B,EAAU,kBAAsC;QAA9E,mBAAc,GAAd,cAAc,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEtG,KAAK,CAAC,WAAW,EAAE,QAAS;QAC1B,MAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAClD,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBAChD,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,EAAE,CAAC;YACd,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACvG,CAAC;CACF,CAAA;AA1BY,YAAY;IADxB,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEG,cAAc,oBAAd,cAAc,oDAA8B,kBAAkB,oBAAlB,kBAAkB;GADvF,YAAY,CA0BxB;SA1BY,YAAY","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-session.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\n\n  login(credentials, callback?) {\n    const cb = callback || function() {};\n\n    return new Promise((resolve, reject) => {\n      this.authServerProvider.login(credentials).subscribe(\n        data => {\n          this.accountService.identity(true).then(account => {\n            resolve(data);\n          });\n          return cb();\n        },\n        err => {\n          this.logout();\n          reject(err);\n          return cb(err);\n        }\n      );\n    });\n  }\n\n  logout() {\n    this.authServerProvider.logout().subscribe(null, null, () => this.accountService.authenticate(null));\n  }\n}\n"]}]}