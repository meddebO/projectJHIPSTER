{"remainingRequest":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts","dependencies":[{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts","mtime":1568304012926},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2E7DQppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOw0KaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOw0KaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7DQpsZXQgSmhpQ29uZmlndXJhdGlvblNlcnZpY2UgPSBjbGFzcyBKaGlDb25maWd1cmF0aW9uU2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgIH0NCiAgICBnZXQoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvY29uZmlncHJvcHMnLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkucGlwZShtYXAoKHJlcykgPT4gew0KICAgICAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IFtdOw0KICAgICAgICAgICAgY29uc3QgcHJvcGVydGllc09iamVjdCA9IHRoaXMuZ2V0Q29uZmlnUHJvcGVydGllc09iamVjdHMocmVzLmJvZHkpOw0KICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gcHJvcGVydGllc09iamVjdCkgew0KICAgICAgICAgICAgICAgIGlmIChwcm9wZXJ0aWVzT2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIHsNCiAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllcy5wdXNoKHByb3BlcnRpZXNPYmplY3Rba2V5XSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHByb3BlcnRpZXMuc29ydCgocHJvcGVydHlBLCBwcm9wZXJ0eUIpID0+IHsNCiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlBLnByZWZpeCA9PT0gcHJvcGVydHlCLnByZWZpeCA/IDAgOiBwcm9wZXJ0eUEucHJlZml4IDwgcHJvcGVydHlCLnByZWZpeCA/IC0xIDogMTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9KSk7DQogICAgfQ0KICAgIGdldENvbmZpZ1Byb3BlcnRpZXNPYmplY3RzKHJlcykgew0KICAgICAgICAvLyBUaGlzIGNvZGUgaXMgZm9yIFNwcmluZyBCb290IDINCiAgICAgICAgaWYgKHJlc1snY29udGV4dHMnXSAhPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiByZXNbJ2NvbnRleHRzJ10pIHsNCiAgICAgICAgICAgICAgICAvLyBJZiB0aGUga2V5IGlzIG5vdCBib290c3RyYXAsIGl0IHdpbGwgYmUgdGhlIEFwcGxpY2F0aW9uQ29udGV4dCBJZA0KICAgICAgICAgICAgICAgIC8vIEZvciBkZWZhdWx0IGFwcCwgaXQgaXMgYmFzZU5hbWUNCiAgICAgICAgICAgICAgICAvLyBGb3IgbWljcm9zZXJ2aWNlLCBpdCBpcyBiYXNlTmFtZS0xDQogICAgICAgICAgICAgICAgaWYgKCFrZXkuc3RhcnRzV2l0aCgnYm9vdHN0cmFwJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc1snY29udGV4dHMnXVtrZXldWydiZWFucyddOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyBieSBkZWZhdWx0LCB1c2UgdGhlIGRlZmF1bHQgQXBwbGljYXRpb25Db250ZXh0IElkDQogICAgICAgIHJldHVybiByZXNbJ2NvbnRleHRzJ11bJ2poaXBzdGVyQVBQJ11bJ2JlYW5zJ107DQogICAgfQ0KICAgIGdldEVudigpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9lbnYnLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkucGlwZShtYXAoKHJlcykgPT4gew0KICAgICAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IHt9Ow0KICAgICAgICAgICAgY29uc3QgcHJvcGVydHlTb3VyY2VzID0gcmVzLmJvZHlbJ3Byb3BlcnR5U291cmNlcyddOw0KICAgICAgICAgICAgZm9yIChjb25zdCBwcm9wZXJ0eU9iamVjdCBvZiBwcm9wZXJ0eVNvdXJjZXMpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gcHJvcGVydHlPYmplY3RbJ25hbWUnXTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZXRhaWxQcm9wZXJ0aWVzID0gcHJvcGVydHlPYmplY3RbJ3Byb3BlcnRpZXMnXTsNCiAgICAgICAgICAgICAgICBjb25zdCB2YWxzID0gW107DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXlEZXRhaWwgaW4gZGV0YWlsUHJvcGVydGllcykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoZGV0YWlsUHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShrZXlEZXRhaWwpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB2YWxzLnB1c2goeyBrZXk6IGtleURldGFpbCwgdmFsOiBkZXRhaWxQcm9wZXJ0aWVzW2tleURldGFpbF1bJ3ZhbHVlJ10gfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcHJvcGVydGllc1tuYW1lXSA9IHZhbHM7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gcHJvcGVydGllczsNCiAgICAgICAgfSkpOw0KICAgIH0NCn07DQpKaGlDb25maWd1cmF0aW9uU2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBKaGlDb25maWd1cmF0aW9uU2VydmljZSk7DQpleHBvcnQgeyBKaGlDb25maWd1cmF0aW9uU2VydmljZSB9Ow0K"},{"version":3,"file":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts","sourceRoot":"","sources":["C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class JhiConfigurationService {\n  constructor(private http: HttpClient) {}\n\n  get(): Observable<any> {\n    return this.http.get(SERVER_API_URL + 'management/configprops', { observe: 'response' }).pipe(\n      map((res: HttpResponse<any>) => {\n        const properties: any[] = [];\n        const propertiesObject = this.getConfigPropertiesObjects(res.body);\n        for (const key in propertiesObject) {\n          if (propertiesObject.hasOwnProperty(key)) {\n            properties.push(propertiesObject[key]);\n          }\n        }\n\n        return properties.sort((propertyA, propertyB) => {\n          return propertyA.prefix === propertyB.prefix ? 0 : propertyA.prefix < propertyB.prefix ? -1 : 1;\n        });\n      })\n    );\n  }\n\n  getConfigPropertiesObjects(res: Object) {\n    // This code is for Spring Boot 2\n    if (res['contexts'] !== undefined) {\n      for (const key in res['contexts']) {\n        // If the key is not bootstrap, it will be the ApplicationContext Id\n        // For default app, it is baseName\n        // For microservice, it is baseName-1\n        if (!key.startsWith('bootstrap')) {\n          return res['contexts'][key]['beans'];\n        }\n      }\n    }\n    // by default, use the default ApplicationContext Id\n    return res['contexts']['jhipsterAPP']['beans'];\n  }\n\n  getEnv(): Observable<any> {\n    return this.http.get(SERVER_API_URL + 'management/env', { observe: 'response' }).pipe(\n      map((res: HttpResponse<any>) => {\n        const properties: any = {};\n        const propertySources = res.body['propertySources'];\n\n        for (const propertyObject of propertySources) {\n          const name = propertyObject['name'];\n          const detailProperties = propertyObject['properties'];\n          const vals: any[] = [];\n          for (const keyDetail in detailProperties) {\n            if (detailProperties.hasOwnProperty(keyDetail)) {\n              vals.push({ key: keyDetail, val: detailProperties[keyDetail]['value'] });\n            }\n          }\n          properties[name] = vals;\n        }\n        return properties;\n      })\n    );\n  }\n}\n"]}]}