{"remainingRequest":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\home\\home.component.ts","dependencies":[{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\home\\home.component.ts","mtime":1568304011568},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2EsIF9iLCBfYzsNCmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOw0KaW1wb3J0IHsgSmhpRXZlbnRNYW5hZ2VyIH0gZnJvbSAnbmctamhpcHN0ZXInOw0KaW1wb3J0IHsgTG9naW5Nb2RhbFNlcnZpY2UsIEFjY291bnRTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUnOw0KbGV0IEhvbWVDb21wb25lbnQgPSBjbGFzcyBIb21lQ29tcG9uZW50IHsNCiAgICBjb25zdHJ1Y3RvcihhY2NvdW50U2VydmljZSwgbG9naW5Nb2RhbFNlcnZpY2UsIGV2ZW50TWFuYWdlcikgew0KICAgICAgICB0aGlzLmFjY291bnRTZXJ2aWNlID0gYWNjb3VudFNlcnZpY2U7DQogICAgICAgIHRoaXMubG9naW5Nb2RhbFNlcnZpY2UgPSBsb2dpbk1vZGFsU2VydmljZTsNCiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIgPSBldmVudE1hbmFnZXI7DQogICAgfQ0KICAgIG5nT25Jbml0KCkgew0KICAgICAgICB0aGlzLmFjY291bnRTZXJ2aWNlLmlkZW50aXR5KCkudGhlbigoYWNjb3VudCkgPT4gew0KICAgICAgICAgICAgdGhpcy5hY2NvdW50ID0gYWNjb3VudDsNCiAgICAgICAgfSk7DQogICAgICAgIHRoaXMucmVnaXN0ZXJBdXRoZW50aWNhdGlvblN1Y2Nlc3MoKTsNCiAgICB9DQogICAgcmVnaXN0ZXJBdXRoZW50aWNhdGlvblN1Y2Nlc3MoKSB7DQogICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyLnN1YnNjcmliZSgnYXV0aGVudGljYXRpb25TdWNjZXNzJywgbWVzc2FnZSA9PiB7DQogICAgICAgICAgICB0aGlzLmFjY291bnRTZXJ2aWNlLmlkZW50aXR5KCkudGhlbihhY2NvdW50ID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnQgPSBhY2NvdW50Ow0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KICAgIH0NCiAgICBpc0F1dGhlbnRpY2F0ZWQoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmFjY291bnRTZXJ2aWNlLmlzQXV0aGVudGljYXRlZCgpOw0KICAgIH0NCiAgICBsb2dpbigpIHsNCiAgICAgICAgdGhpcy5tb2RhbFJlZiA9IHRoaXMubG9naW5Nb2RhbFNlcnZpY2Uub3BlbigpOw0KICAgIH0NCn07DQpIb21lQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFsNCiAgICBDb21wb25lbnQoew0KICAgICAgICBzZWxlY3RvcjogJ2poaS1ob21lJywNCiAgICAgICAgdGVtcGxhdGVVcmw6ICcuL2hvbWUuY29tcG9uZW50Lmh0bWwnLA0KICAgICAgICBzdHlsZVVybHM6IFsnaG9tZS5zY3NzJ10NCiAgICB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgQWNjb3VudFNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEFjY291bnRTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIExvZ2luTW9kYWxTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBMb2dpbk1vZGFsU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBKaGlFdmVudE1hbmFnZXIgIT09ICJ1bmRlZmluZWQiICYmIEpoaUV2ZW50TWFuYWdlcikgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdF0pDQpdLCBIb21lQ29tcG9uZW50KTsNCmV4cG9ydCB7IEhvbWVDb21wb25lbnQgfTsNCg=="},{"version":3,"file":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\home\\home.component.ts","sourceRoot":"","sources":["C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\home\\home.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAE9C,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAW,MAAM,UAAU,CAAC;AAOtE,IAAa,aAAa,GAA1B,MAAa,aAAa;IAIxB,YACU,cAA8B,EAC9B,iBAAoC,EACpC,YAA6B;QAF7B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAiB;IACpC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,OAAgB,EAAE,EAAE;YACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,uBAAuB,EAAE,OAAO,CAAC,EAAE;YAC7D,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;CACF,CAAA;AAhCY,aAAa;IALzB,SAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,uBAAuB;QACpC,SAAS,EAAE,CAAC,WAAW,CAAC;KACzB,CAAC;iEAM0B,cAAc,oBAAd,cAAc,oDACX,iBAAiB,oBAAjB,iBAAiB,oDACtB,eAAe,oBAAf,eAAe;GAP5B,aAAa,CAgCzB;SAhCY,aAAa","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { JhiEventManager } from 'ng-jhipster';\n\nimport { LoginModalService, AccountService, Account } from 'app/core';\n\n@Component({\n  selector: 'jhi-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['home.scss']\n})\nexport class HomeComponent implements OnInit {\n  account: Account;\n  modalRef: NgbModalRef;\n\n  constructor(\n    private accountService: AccountService,\n    private loginModalService: LoginModalService,\n    private eventManager: JhiEventManager\n  ) {}\n\n  ngOnInit() {\n    this.accountService.identity().then((account: Account) => {\n      this.account = account;\n    });\n    this.registerAuthenticationSuccess();\n  }\n\n  registerAuthenticationSuccess() {\n    this.eventManager.subscribe('authenticationSuccess', message => {\n      this.accountService.identity().then(account => {\n        this.account = account;\n      });\n    });\n  }\n\n  isAuthenticated() {\n    return this.accountService.isAuthenticated();\n  }\n\n  login() {\n    this.modalRef = this.loginModalService.open();\n  }\n}\n"]}]}