{"remainingRequest":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","dependencies":[{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","mtime":1568304012762},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2EsIF9iOw0KaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBBY2NvdW50U2VydmljZSB9IGZyb20gJ2FwcC9jb3JlJzsNCmltcG9ydCB7IFNlc3Npb25zU2VydmljZSB9IGZyb20gJy4vc2Vzc2lvbnMuc2VydmljZSc7DQpsZXQgU2Vzc2lvbnNDb21wb25lbnQgPSBjbGFzcyBTZXNzaW9uc0NvbXBvbmVudCB7DQogICAgY29uc3RydWN0b3Ioc2Vzc2lvbnNTZXJ2aWNlLCBhY2NvdW50U2VydmljZSkgew0KICAgICAgICB0aGlzLnNlc3Npb25zU2VydmljZSA9IHNlc3Npb25zU2VydmljZTsNCiAgICAgICAgdGhpcy5hY2NvdW50U2VydmljZSA9IGFjY291bnRTZXJ2aWNlOw0KICAgIH0NCiAgICBuZ09uSW5pdCgpIHsNCiAgICAgICAgdGhpcy5zZXNzaW9uc1NlcnZpY2UuZmluZEFsbCgpLnN1YnNjcmliZShzZXNzaW9ucyA9PiAodGhpcy5zZXNzaW9ucyA9IHNlc3Npb25zKSk7DQogICAgICAgIHRoaXMuYWNjb3VudFNlcnZpY2UuaWRlbnRpdHkoKS50aGVuKGFjY291bnQgPT4gew0KICAgICAgICAgICAgdGhpcy5hY2NvdW50ID0gYWNjb3VudDsNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGludmFsaWRhdGUoc2VyaWVzKSB7DQogICAgICAgIHRoaXMuc2Vzc2lvbnNTZXJ2aWNlLmRlbGV0ZShlbmNvZGVVUklDb21wb25lbnQoc2VyaWVzKSkuc3Vic2NyaWJlKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBudWxsOw0KICAgICAgICAgICAgICAgIHRoaXMuc3VjY2VzcyA9ICdPSyc7DQogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uc1NlcnZpY2UuZmluZEFsbCgpLnN1YnNjcmliZShzZXNzaW9ucyA9PiAodGhpcy5zZXNzaW9ucyA9IHNlc3Npb25zKSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3MgPSBudWxsOw0KICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAnRVJST1InOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQp9Ow0KU2Vzc2lvbnNDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIENvbXBvbmVudCh7DQogICAgICAgIHNlbGVjdG9yOiAnamhpLXNlc3Npb25zJywNCiAgICAgICAgdGVtcGxhdGVVcmw6ICcuL3Nlc3Npb25zLmNvbXBvbmVudC5odG1sJw0KICAgIH0pLA0KICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBTZXNzaW9uc1NlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFNlc3Npb25zU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBBY2NvdW50U2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgQWNjb3VudFNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3RdKQ0KXSwgU2Vzc2lvbnNDb21wb25lbnQpOw0KZXhwb3J0IHsgU2Vzc2lvbnNDb21wb25lbnQgfTsNCg=="},{"version":3,"file":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","sourceRoot":"","sources":["C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAE1C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAMrD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAM5B,YAAoB,eAAgC,EAAU,cAA8B;QAAxE,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEhG,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3E,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;aAClF;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AA5BY,iBAAiB;IAJ7B,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,WAAW,EAAE,2BAA2B;KACzC,CAAC;iEAOqC,eAAe,oBAAf,eAAe,oDAA0B,cAAc,oBAAd,cAAc;GANjF,iBAAiB,CA4B7B;SA5BY,iBAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { AccountService } from 'app/core';\nimport { Session } from './session.model';\nimport { SessionsService } from './sessions.service';\n\n@Component({\n  selector: 'jhi-sessions',\n  templateUrl: './sessions.component.html'\n})\nexport class SessionsComponent implements OnInit {\n  account: any;\n  error: string;\n  success: string;\n  sessions: Session[];\n\n  constructor(private sessionsService: SessionsService, private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.sessionsService.findAll().subscribe(sessions => (this.sessions = sessions));\n\n    this.accountService.identity().then(account => {\n      this.account = account;\n    });\n  }\n\n  invalidate(series) {\n    this.sessionsService.delete(encodeURIComponent(series)).subscribe(response => {\n      if (response.status === 200) {\n        this.error = null;\n        this.success = 'OK';\n        this.sessionsService.findAll().subscribe(sessions => (this.sessions = sessions));\n      } else {\n        this.success = null;\n        this.error = 'ERROR';\n      }\n    });\n  }\n}\n"]}]}