{"remainingRequest":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\register\\register.component.ts","dependencies":[{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\register\\register.component.ts","mtime":1568304012513},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2EsIF9iLCBfYywgX2QsIF9lOw0KaW1wb3J0IHsgQ29tcG9uZW50LCBSZW5kZXJlciwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOw0KaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7DQppbXBvcnQgeyBFTUFJTF9BTFJFQURZX1VTRURfVFlQRSwgTE9HSU5fQUxSRUFEWV9VU0VEX1RZUEUgfSBmcm9tICdhcHAvc2hhcmVkJzsNCmltcG9ydCB7IExvZ2luTW9kYWxTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUnOw0KaW1wb3J0IHsgUmVnaXN0ZXIgfSBmcm9tICcuL3JlZ2lzdGVyLnNlcnZpY2UnOw0KbGV0IFJlZ2lzdGVyQ29tcG9uZW50ID0gY2xhc3MgUmVnaXN0ZXJDb21wb25lbnQgew0KICAgIGNvbnN0cnVjdG9yKGxvZ2luTW9kYWxTZXJ2aWNlLCByZWdpc3RlclNlcnZpY2UsIGVsZW1lbnRSZWYsIHJlbmRlcmVyLCBmYikgew0KICAgICAgICB0aGlzLmxvZ2luTW9kYWxTZXJ2aWNlID0gbG9naW5Nb2RhbFNlcnZpY2U7DQogICAgICAgIHRoaXMucmVnaXN0ZXJTZXJ2aWNlID0gcmVnaXN0ZXJTZXJ2aWNlOw0KICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmOw0KICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7DQogICAgICAgIHRoaXMuZmIgPSBmYjsNCiAgICAgICAgdGhpcy5yZWdpc3RlckZvcm0gPSB0aGlzLmZiLmdyb3VwKHsNCiAgICAgICAgICAgIGxvZ2luOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCgxKSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApLCBWYWxpZGF0b3JzLnBhdHRlcm4oJ15bXy5AQS1aYS16MC05LV0qJCcpXV0sDQogICAgICAgICAgICBlbWFpbDogWycnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5taW5MZW5ndGgoNSksIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDI1NCksIFZhbGlkYXRvcnMuZW1haWxdXSwNCiAgICAgICAgICAgIHBhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg0KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApXV0sDQogICAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgbmdPbkluaXQoKSB7DQogICAgICAgIHRoaXMuc3VjY2VzcyA9IGZhbHNlOw0KICAgIH0NCiAgICBuZ0FmdGVyVmlld0luaXQoKSB7DQogICAgICAgIHRoaXMucmVuZGVyZXIuaW52b2tlRWxlbWVudE1ldGhvZCh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcjbG9naW4nKSwgJ2ZvY3VzJywgW10pOw0KICAgIH0NCiAgICByZWdpc3RlcigpIHsNCiAgICAgICAgbGV0IHJlZ2lzdGVyQWNjb3VudCA9IHt9Ow0KICAgICAgICBjb25zdCBsb2dpbiA9IHRoaXMucmVnaXN0ZXJGb3JtLmdldChbJ2xvZ2luJ10pLnZhbHVlOw0KICAgICAgICBjb25zdCBlbWFpbCA9IHRoaXMucmVnaXN0ZXJGb3JtLmdldChbJ2VtYWlsJ10pLnZhbHVlOw0KICAgICAgICBjb25zdCBwYXNzd29yZCA9IHRoaXMucmVnaXN0ZXJGb3JtLmdldChbJ3Bhc3N3b3JkJ10pLnZhbHVlOw0KICAgICAgICBpZiAocGFzc3dvcmQgIT09IHRoaXMucmVnaXN0ZXJGb3JtLmdldChbJ2NvbmZpcm1QYXNzd29yZCddKS52YWx1ZSkgew0KICAgICAgICAgICAgdGhpcy5kb05vdE1hdGNoID0gJ0VSUk9SJzsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIHJlZ2lzdGVyQWNjb3VudCA9IE9iamVjdC5hc3NpZ24oe30sIHJlZ2lzdGVyQWNjb3VudCwgeyBsb2dpbiwgZW1haWwsIHBhc3N3b3JkIH0pOw0KICAgICAgICAgICAgdGhpcy5kb05vdE1hdGNoID0gbnVsbDsNCiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBudWxsOw0KICAgICAgICAgICAgdGhpcy5lcnJvclVzZXJFeGlzdHMgPSBudWxsOw0KICAgICAgICAgICAgdGhpcy5lcnJvckVtYWlsRXhpc3RzID0gbnVsbDsNCiAgICAgICAgICAgIHJlZ2lzdGVyQWNjb3VudCA9IE9iamVjdC5hc3NpZ24oe30sIHJlZ2lzdGVyQWNjb3VudCwgeyBsYW5nS2V5OiAnZW4nIH0pOw0KICAgICAgICAgICAgdGhpcy5yZWdpc3RlclNlcnZpY2Uuc2F2ZShyZWdpc3RlckFjY291bnQpLnN1YnNjcmliZSgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5zdWNjZXNzID0gdHJ1ZTsNCiAgICAgICAgICAgIH0sIHJlc3BvbnNlID0+IHRoaXMucHJvY2Vzc0Vycm9yKHJlc3BvbnNlKSk7DQogICAgICAgIH0NCiAgICB9DQogICAgb3BlbkxvZ2luKCkgew0KICAgICAgICB0aGlzLm1vZGFsUmVmID0gdGhpcy5sb2dpbk1vZGFsU2VydmljZS5vcGVuKCk7DQogICAgfQ0KICAgIHByb2Nlc3NFcnJvcihyZXNwb25zZSkgew0KICAgICAgICB0aGlzLnN1Y2Nlc3MgPSBudWxsOw0KICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDAgJiYgcmVzcG9uc2UuZXJyb3IudHlwZSA9PT0gTE9HSU5fQUxSRUFEWV9VU0VEX1RZUEUpIHsNCiAgICAgICAgICAgIHRoaXMuZXJyb3JVc2VyRXhpc3RzID0gJ0VSUk9SJzsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCAmJiByZXNwb25zZS5lcnJvci50eXBlID09PSBFTUFJTF9BTFJFQURZX1VTRURfVFlQRSkgew0KICAgICAgICAgICAgdGhpcy5lcnJvckVtYWlsRXhpc3RzID0gJ0VSUk9SJzsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAnRVJST1InOw0KICAgICAgICB9DQogICAgfQ0KfTsNClJlZ2lzdGVyQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFsNCiAgICBDb21wb25lbnQoew0KICAgICAgICBzZWxlY3RvcjogJ2poaS1yZWdpc3RlcicsDQogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9yZWdpc3Rlci5jb21wb25lbnQuaHRtbCcNCiAgICB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgTG9naW5Nb2RhbFNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIExvZ2luTW9kYWxTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIFJlZ2lzdGVyICE9PSAidW5kZWZpbmVkIiAmJiBSZWdpc3RlcikgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBFbGVtZW50UmVmICE9PSAidW5kZWZpbmVkIiAmJiBFbGVtZW50UmVmKSA9PT0gImZ1bmN0aW9uIiA/IF9jIDogT2JqZWN0LCB0eXBlb2YgKF9kID0gdHlwZW9mIFJlbmRlcmVyICE9PSAidW5kZWZpbmVkIiAmJiBSZW5kZXJlcikgPT09ICJmdW5jdGlvbiIgPyBfZCA6IE9iamVjdCwgdHlwZW9mIChfZSA9IHR5cGVvZiBGb3JtQnVpbGRlciAhPT0gInVuZGVmaW5lZCIgJiYgRm9ybUJ1aWxkZXIpID09PSAiZnVuY3Rpb24iID8gX2UgOiBPYmplY3RdKQ0KXSwgUmVnaXN0ZXJDb21wb25lbnQpOw0KZXhwb3J0IHsgUmVnaXN0ZXJDb21wb25lbnQgfTsNCg=="},{"version":3,"file":"C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\register\\register.component.ts","sourceRoot":"","sources":["C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\node_modules\\tslint-loader\\index.js!C:\\Users\\oumaima meddeb\\Desktop\\jhipster-APP\\heroku_demo\\src\\main\\webapp\\app\\account\\register\\register.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\nimport { LoginModalService } from 'app/core';\nimport { Register } from './register.service';\n\n@Component({\n  selector: 'jhi-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  doNotMatch: string;\n  error: string;\n  errorEmailExists: string;\n  errorUserExists: string;\n  success: boolean;\n  modalRef: NgbModalRef;\n\n  registerForm = this.fb.group({\n    login: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(50), Validators.pattern('^[_.@A-Za-z0-9-]*$')]],\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\n  });\n\n  constructor(\n    private loginModalService: LoginModalService,\n    private registerService: Register,\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.success = false;\n  }\n\n  ngAfterViewInit() {\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n  }\n\n  register() {\n    let registerAccount = {};\n    const login = this.registerForm.get(['login']).value;\n    const email = this.registerForm.get(['email']).value;\n    const password = this.registerForm.get(['password']).value;\n    if (password !== this.registerForm.get(['confirmPassword']).value) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      registerAccount = { ...registerAccount, login, email, password };\n      this.doNotMatch = null;\n      this.error = null;\n      this.errorUserExists = null;\n      this.errorEmailExists = null;\n      registerAccount = { ...registerAccount, langKey: 'en' };\n\n      this.registerService.save(registerAccount).subscribe(\n        () => {\n          this.success = true;\n        },\n        response => this.processError(response)\n      );\n    }\n  }\n\n  openLogin() {\n    this.modalRef = this.loginModalService.open();\n  }\n\n  private processError(response: HttpErrorResponse) {\n    this.success = null;\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n      this.errorUserExists = 'ERROR';\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n      this.errorEmailExists = 'ERROR';\n    } else {\n      this.error = 'ERROR';\n    }\n  }\n}\n"]}]}